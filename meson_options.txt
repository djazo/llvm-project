#option('runtimes', type: 'array', choises:['compiler-rt','libunwind','libcxxabi','libcxx'], value: ['compiler-rt','libunwind','libcxxabi','libcxx'])
# some of the options aren't supported as mostly targeting baremetal target
# libunwind
option('libunwind_enable_cet', type: 'boolean', value: false)
option('libunwind_enable_assertions', type: 'boolean', value: false)
option('libunwind_enable_pedantic', type: 'boolean', value: false)
option('libunwind_enable_werror', type: 'boolean', value: false)
option('libunwind_hide_symbols', type: 'boolean', value: false)
option('libunwind_enable_cross_unwinding', type: 'boolean', value: false)
option('libunwind_enable_threads', type: 'boolean', value: false)
option('libunwind_enable_arm_wmmx', type: 'boolean', value: false)
option('libunwind_is_baremetal', type: 'boolean', value: true)
option('libunwind_has_pthread_lib', type: 'boolean', value: false)
option('libunwind_use_frame_header_cache', type: 'boolean', value: false)
# libcxxabi
option('libcxxabi_enable_exceptions', type: 'boolean', value: false)
option('libcxxabi_enable_assertions', type: 'boolean', value: false)
option('libcxxabi_enable_pedantic', type: 'boolean', value: false)
option('libcxxabi_enable_werror', type: 'boolean', value: false)
option('libcxxabi_use_llvm_unwinder', type: 'boolean', value: true)
option('libcxxabi_use_compiler_rt', type: 'boolean', value: true)
option('libcxxabi_enable_threads', type: 'boolean', value: false)
option('libcxxabi_has_pthread_api', type: 'boolean', value: false)
option('libcxxabi_has_external_thread_api', type: 'boolean', value: false)
option('libcxxabi_build_external_thread_library', type: 'boolean', value: false)
option('libcxxabi_enable_forgiving_dynamic_cast', type: 'boolean', value: false)
option('libcxxabi_enable_new_delete_definitions', type: 'boolean', value: false)
option('libcxxabi_enable_static', type: 'boolean', value: true)
option('libcxxabi_enable_shared', type: 'boolean', value: false)
option('libcxxabi_baremetal', type: 'boolean', value: true)
option('libcxxabi_silent_terminate', type: 'boolean', value: true)
option('libcxxabi_non_demangling_terminate', type: 'boolean', value: true)
option('libcxxabi_hermetic_static_library', type: 'boolean', value: false)
# libcxx
option('libcxx_enable_assertions', type: 'boolean', value: false)
option('libcxx_enable_shared', type: 'boolean', value: false)
option('libcxx_enable_static', type: 'boolean', value: false)
option('libcxx_enable_filesystem', type: 'boolean', value: false)
option('libcxx_enable_parallel_algorithms', type: 'boolean', value: false)
option('libcxx_enable_debug_mode', type: 'boolean', value: false)
option('libcxx_enable_random_device', type: 'boolean', value: false)
option('libcxx_enable_localization', type: 'boolean', value: false)
option('libcxx_enable_unicode', type: 'boolean', value: false)
option('libcxx_enable_wide_characters', type: 'boolean', value: false)
option('libcxx_enable_vendor_availability_annotations', type: 'boolean', value: false)
option('libcxx_abi_unstable', type: 'boolean', value: false)
option('libcxx_use_compiler_rt', type: 'boolean', value: true)
option('libcxx_enable_new_delete_definitions', type: 'boolean', value: true)
option('libcxx_use_llvm_unwinder', type: 'boolean', value: true)
option('libcxx_enable_exceptions', type: 'boolean', value: false)
option('libcxx_enable_rtti', type: 'boolean', value: false)
option('libcxx_enable_threads', type: 'boolean', value: false)
option('libcxx_enable_monotonic_clock', type: 'boolean', value: false)
option('libcxx_has_musl_libc', type: 'boolean', value: false)
option('libcxx_has_pthread_api', type: 'boolean', value: false)
option('libcxx_has_external_thread_api', type: 'boolean', value: false)
option('libcxx_build_external_thread_library', type: 'boolean', value: false)
option('libcxx_enable_pedantic', type: 'boolean', value: false)
option('libcxx_enable_werror', type: 'boolean', value: false)
option('libcxx_disable_macro_conflict_warnings', type: 'boolean', value: false)
option('libcxx_hermetic_static_library', type: 'boolean', value: false)

